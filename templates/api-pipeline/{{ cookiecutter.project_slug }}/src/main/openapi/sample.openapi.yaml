openapi: 3.0.3
info:
  title: User and Task Management API
  description: A simple API for managing users and their tasks.
  version: "1.0.0"
servers:
  - url: https://api.example.com/v1
    description: Production server

paths:
  /users:
    get:
      summary: Get all users
      description: Returns a list of all registered users.
      operationId: getUsers
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Creates a new user and returns the created user data.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Get a specific user
      description: Returns a specific user by their ID.
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to retrieve.
      responses:
        '200':
          description: User details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.

    delete:
      summary: Delete a user
      description: Deletes a specific user by their ID.
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to delete.
      responses:
        '204':
          description: User deleted successfully.
        '404':
          description: User not found.

  /users/{userId}/tasks:
    get:
      summary: Get tasks for a specific user
      description: Returns a list of tasks assigned to the specified user.
      operationId: getTasksForUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user whose tasks are being retrieved.
      responses:
        '200':
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "12345"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "john.doe@example.com"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    Task:
      type: object
      properties:
        id:
          type: string
          example: "67890"
        title:
          type: string
          example: "Complete project"
        description:
          type: string
          example: "Finish the OpenAPI project by tomorrow"
        status:
          type: string
          enum: [pending, in_progress, completed]
          example: "pending"
        dueDate:
          type: string
          format: date
          example: "2024-02-01"
